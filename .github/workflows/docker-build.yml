name: Docker Build

on:
  push:
    branches: [ main ]

env:
  DOCKERHUB_REPO: kemp-zz/ubuntu-server
  BUILDKIT_DEBUG: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: |
            network=host

      - name: Network Precheck
        timeout-minutes: 3
        run: |
          # 基础网络测试（网页5）
          if ! ping -c 3 registry-1.docker.io &> /dev/null; then
            echo "::error::DNS解析失败，请检查网络配置"
            exit 1
          fi
          
          # HTTPS握手测试（网页2）
          if ! curl -Iv --connect-timeout 15 https://registry-1.docker.io/v2/ 2>&1 | grep -q "HTTP/2 200"; then
            echo "::error::Docker Hub连接失败，建议检查防火墙或代理设置"
            exit 1
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        env:
          BUILDKIT_PROGRESS: plain  # 开启详细进度输出（网页6）
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:latest
            ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: |
            type=local,dest=${{ github.workspace }}/build-logs
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Debug Log Analysis
        if: ${{ always() }}
        run: |
          echo "=== 网络层日志 ==="
          journalctl -u docker.service --since "5 minutes ago" | grep -iE 'error|failed'
          
          echo "=== 构建过程日志 ==="
          grep -rn 'DOWNLOADING' ${{ github.workspace }}/build-logs || echo "未检测到下载记录"
          
          echo "=== 镜像层校验 ==="
          docker manifest inspect $DOCKERHUB_REPO:latest 2>/dev/null || echo "镜像未成功生成"
