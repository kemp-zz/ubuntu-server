name: Docker Image CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/*.yml'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ubuntu-22.04-server
  CACHE_DIR: /tmp/.buildx-cache
  BUILD_DATE: ${{ github.event.head_commit.timestamp || github.run_started_at }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # ================= 代码检出 =================
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      # ================= 构建环境初始化 =================
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host
          buildkitd-config: |
            [registry."docker.io"]
              mirrors = ["mirror.gcr.io"]

      # ================= 缓存管理 =================
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # ================= 认证阶段 =================
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # ================= 构建推送阶段 =================
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
            ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{
              format('{0:%Y%m%d}', env.BUILD_DATE)
            }}
          cache-from: type=local,src=${{ env.CACHE_DIR }}
          cache-to: type=local,dest=${{ env.CACHE_DIR }},mode=max
          labels: |
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.revision=${{ github.sha }}

      # ================= 后处理阶段 =================
      - name: Post Success
        if: success()
        run: |
          echo "✅ 镜像构建成功！"
          echo "🆕 最新版: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
          echo "🔢 构建编号: ${{ github.run_number }}"
          echo "🔖 提交SHA: ${{ github.sha }}"

      - name: Security Logout
        if: always()
        run: docker logout ${{ env.REGISTRY }}
